name: Build and release
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: "0 */12 * * *"

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.checker.outputs.matrix }}
      status: ${{ steps.checker.outputs.status }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        run: |
              echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_OUTPUT
      - name: nvchecker and update
        id: checker
        uses: nvcheck-and-update
        with:
          changed_files: ${{ steps.changed-files.outputs.changed_files }}
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: steps.checker.outputs.status == 'true'
        with:
          file_pattern: ${{ steps.checker.outputs.oldver_file }}
          commit_message: ⏰ auto updated oldver file
  Build:
    if: needs.check.outputs.status == 'true'
    permissions: write-all
    needs: check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.check.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: arch-build
        id: build
        with:
          pkg: ${{ matrix.pkg }}
          version: ${{ matrix.version }}
      - name: Pull Remote Changes
        if: ${{ success() }}
        run: git pull --rebase --autostash
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ success() }}
        with:
          file_pattern: '${{ matrix.pkg }}/PKGBUILD'
          commit_message: ⏰ ${{ matrix.pkg }}:auto updated to ${{ matrix.version }}
      - name: Upload Packages Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.asset }}
          path: ${{ matrix.pkg }}/${{ steps.build.outputs.asset }}
          if-no-files-found: error
      # - name: Delete old asset
      #   env:
      #     old_pkgver: ${{ steps.build.outputs.old_pkgver }}
      #   run: |
      #     old_asset=$(gh release view --json assets | jq -r '.assets[].name' | grep -o "^${{ matrix.pkgs }}-$old_pkgver.*pkg.tar.zst")
      #     if [ ${#assets[@]} -gt 0 ]; then
      #             for asset in "${assets[@]}"; do
      #                     echo "Deleting asset: $asset"
      #                     gh release delete-asset ${{github.ref_name}} $old_asset -y
      #             done
      #     else
  Release:
    needs: [ check, Build ]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Pull Remote Changes
        run: git pull --rebase --autostash
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - uses: repo-add-action
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: packages
          files: |
            ${{ github.workspace }}/*.pkg.tar.*
            ${{ github.workspace }}/*.files.*
            ${{ github.workspace }}/*.db.*
          generate_release_notes: true
      - name: Send notify to telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: "From ${{ github.repository }} - ${{ github.workflow }}: \n Packages build success!\n[View it On Github](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n"
