name: Build and release
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */12 * * *"

jobs:
  Build:
    if: ${{ github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, '[no build]') }}
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkgs:
          # - adobe-source-han-sans-otc-fonts
          # - adobe-source-han-serif-otc-fonts
          # - noto-fonts-all
          # - clash-meta-alpha-git
          - dae-git
          - dae-rules-dat
          # - ctex-windows-fonts
          # - wine-patch
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./build-aur-action
        id: build
        with:
          pkg_name: ${{ matrix.pkgs }}
          vfile: config.toml
      - uses: EndBug/add-and-commit@v9
        if: steps.build.outputs.status == 'true'
        with:
          add: "${{ matrix.pkgs }}/PKGBUILD"
          message: ‚è∞ ${{ matrix.pkgs }}:auto updated to ${{ steps.build.outputs.newver }}
          pull: "--rebase --autostash"
      - name: Upload Packages Artifact
        uses: actions/upload-artifact@v4
        if: steps.build.outputs.status == 'true'
        with:
          name: ${{ steps.build.outputs.asset }}
          path: ${{ matrix.pkgs }}/${{ steps.build.outputs.asset }}
          if-no-files-found: error
      - uses: mknejp/delete-release-assets@v1
        if: steps.build.outputs.status == 'true'
        with:
          token: ${{ github.token }}
          tag: packages
          assets: ${{ steps.build.outputs.old_asset }}
          fail-if-no-assets: false
  Release:
    needs: Build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: bin
      - uses: ./repo-add-action
        with:
          repo_owner: ${{ github.repository_owner }}
          repo_full: ${{ github.repository }}
          path: bin
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Upload Release
        if: ${{ github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, '[no rel]') }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: packages
          files: |
            ${{ github.workspace }}/*.pkg.tar.*
            ${{ github.workspace }}/*.files
            ${{ github.workspace }}/*.db
          generate_release_notes: true
      - name: Send notify to telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: markdown
          message: "From ${{ github.repository }} - ${{ github.workflow }}: \n Packages build success!\n[View it On Github](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n"
